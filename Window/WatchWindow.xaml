<Window x:Class="SiteWatcher.WatchWindow"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SiteWatcher"
        mc:Ignorable="d"
        Title="Наблюдатель"
        Height="900"
        Width="1000"
        MinWidth="800"
        MinHeight="800"
        xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        WindowStartupLocation="CenterScreen"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding">
    <Window.InputBindings>
        <KeyBinding Key="Escape"
                Command="{Binding CloseWindowCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Path">
                <Setter Property="Fill"
                        Value="White"/>
                <Setter Property="Margin"
                        Value="10"/>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <local:InverseBooleanConverter x:Key="InverseBool"/>
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterInverse" FalseValue="Visible" TrueValue="Collapsed"/>
            <local:BindingProxy x:Key="Proxy"
                    Data="{Binding}"></local:BindingProxy>
            <local:HoursMinutesTimeSpanConverter x:Key="TimeSpanConverter"/>
            <local:ListWatchTagToStringConverter x:Key="WatchTagsToString"/>
            <ObjectDataProvider x:Key="SSTEnum"
                    MethodName="GetValues"
                    ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:SourceSelectorType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style x:Key="FontSize">
                <Setter Property="Control.FontSize"
                        Value="14"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Control.FontSize"
                        Value="16"/>
            </Style>
            <Style TargetType="TextBox"
                    BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="ComboBox"
                    BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="CheckBox"
                    BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="Button"
                    BasedOn="{StaticResource FontSize}"/>
            <Style x:Key="RoundButton"
                    BasedOn="{StaticResource FontSize}">
                <Setter Property="TextBlock.TextAlignment"
                        Value="Center"/>
                <Setter Property="Control.VerticalContentAlignment"
                        Value="Center"/>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius"
                                Value="4"/>
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="ColoredButton"
                    BasedOn="{StaticResource RoundButton}">
                <Setter Property="Border.BorderThickness"
                        Value="0"/>
                <Setter Property="Border.Padding"
                        Value="5"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleColoredButton"
                    BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlueButton"
                    BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background"
                        Value="SteelBlue"/>
                <Setter Property="Control.Foreground"
                        Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                            Value="True">
                        <Setter Property="Control.Background"
                                Value="DarkBlue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RedButton"
                    BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background"
                        Value="Crimson"/>
                <Setter Property="Control.Foreground"
                        Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                            Value="True">
                        <Setter Property="Control.Background"
                                Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="GrayButton"
                    BasedOn="{StaticResource ToggleColoredButton}">
                <Setter Property="Control.Background"
                        Value="LightSteelBlue"/>
                <Setter Property="Control.Foreground"
                        Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                            Value="True">
                        <Setter Property="Control.Background"
                                Value="CornflowerBlue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="OrangeButton"
                    BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background"
                        Value="LightCoral"/>
                <Setter Property="Control.Foreground"
                        Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                            Value="True">
                        <Setter Property="Control.Background"
                                Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Storyboard x:Key="AnimateFlicker"
                    RepeatBehavior="Forever">
                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                        From="Gray"
                        To="Red"
                        AutoReverse="True"
                        BeginTime="0:0:1"
                        Duration="0:0:0.4"/>
                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                        From="Red"
                        To="Red"
                        AutoReverse="True"
                        Duration="0:0:0.4"/>
                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                        From="Red"
                        To="Gray"
                        AutoReverse="True"
                        Duration="0:0:0.4"/>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True"
            Margin="5 5 5 5">
        <Grid DockPanel.Dock="Top"
                Margin="0 0 0 10">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="170"/>
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Bottom"
                    Orientation="Vertical">
                <Label>Название</Label>
                <TextBox Text="{Binding Item.Name}"
                        ToolTip="Эта строка будет отображаться в списке наблюдателей как ссылка"/>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom"
                    Grid.Column="1"
                    Margin="10 0 0 0"
                    Orientation="Vertical">
                <Label>Категории</Label>
                <ComboBox IsEditable="True"
                        IsReadOnly="True"
                        ItemsSource="{Binding Tags}"
                        Text="{Binding Tags, Converter={StaticResource WatchTagsToString}, ConverterParameter=&apos;не выбрано&apos;, Mode=OneWay}"
                          ToolTip="Список категорий в которые входит наблюдатель&#x0a;Используется в фильтре по категориям">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:WatchTag}">
                            <CheckBox Content="{Binding Name}"
                                    IsChecked="{Binding Selected}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="HorizontalContentAlignment"
                                    Value="Stretch"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom"
                    Grid.Column="2"
                    Margin="10 0 0 0"
                    Orientation="Vertical">
                <Label>Проверка каждые</Label>
                <TextBox Text="{Binding Item.Interval, Converter={StaticResource TimeSpanConverter}, ConverterParameter=&apos;1m&apos;}"
                         local:TextBoxUtils.CheckRegexText="^([0-9]+[смчдsmhd]?)*$"
                         ToolTip="пример: &#x0a;2д3ч5м или 2d3h5m = 2 дня 3 часа 5 минут&#x0a;Время, через которое будет произведена очередная проверка"/>
            </StackPanel>
            <Button Grid.Column="3"
                    Margin="10 0 0 0"
                    Content="Сохранить"
                    Command="{Binding SaveCommand}"
                    Style="{StaticResource RedButton}"
                    ToolTip="Сохранить изменения"/>
        </Grid>
        <TabControl DockPanel.Dock="Top">
            <TabItem Header="Страница"
                    Padding="5 2 5 2">
                <DockPanel Margin="5 5 5 5">
                    <Grid DockPanel.Dock="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="170"/>
                        </Grid.ColumnDefinitions>
                        <Label>Адрес страницы</Label>
                        <TextBox Margin="0 0 10 0"
                                Padding="2 2 2 2"
                                x:Name="url"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Text="{Binding Item.Source.Url}"
                                IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}"
                                 ToolTip="Адрес страницы для проверки содержимого">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding UrlOpenCommand}"
                                        Key="Enter"
                                        CommandParameter="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <CheckBox Grid.Column="1"
                                Margin="0 5 0 5"
                                IsChecked="{Binding Item.UseProxy}"
                                Command="{Binding UrlUpdateCommand}"
                                CommandParameter="{Binding Item.Source.Url}"
                                ToolTip="Использовать отдельный профиль с использованием прокси-сервера">Профиль прокси</CheckBox>
                        <Button Grid.Row="1"
                                Margin="0 3 13 3"
                                HorizontalAlignment="Right"
                                Style="{StaticResource BlueButton}"
                                Command="{Binding UrlOpenCommand}"
                                CommandParameter="{Binding Item.Source.Url}"
                                IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}"
                                Content="&gt;"
                                Width="20"
                                Height="20"
                                ToolTip="Открыть страницу по адресу"/>

                        <Grid Grid.Column="1"
                                Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0"
                                    Style="{StaticResource BlueButton}"
                                    VerticalAlignment="Stretch"
                                    ToolTip="Выбрать элемент на странице для отслеживания"
                                    IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}"
                                    Command="{Binding BeginSelectCommand}">
                                <TextBlock Padding="5">Выбрать элемент</TextBlock>
                            </Button>

                            <Button Grid.Column="1"
                                    Width="24"
                                    HorizontalAlignment="Right"
                                    Margin="2 0 0 0"
                                    Style="{StaticResource RedButton}"
                                    VerticalAlignment="Stretch"
                                    ToolTip="Очистить выбранные элементы"
                                    IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}"
                                    Command="{Binding SelectDeleteCommand}">
                                <ContentControl Content="{StaticResource IconDelete}"/>
                            </Button>
                        </Grid>

                        <Border Grid.Column="1"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Red"
                                Visibility="{Binding Selecting, Converter={StaticResource BoolToVis}}">
                            <TextBlock Foreground="White"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="16">Выберите элемент</TextBlock>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource AnimateFlicker}"/>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                    </Grid>

                    <CheckBox DockPanel.Dock="Bottom"
                            Margin="0 0 0 5"
                            IsChecked="{Binding Item.Source.CheckData}"
                            ToolTip="Поиск и замена происходят в HTML вместо текста тегов"
                            Visibility="{Binding IsChecked, ElementName=ShowSelectListTgl, Converter={StaticResource BoolToVis}}"
                            >Поиск и замена в HTML</CheckBox>
                                        <!-- Container for SelectList with visibility binding -->

                    <ToggleButton x:Name="ShowSelectListTgl"
                                  Content="Показать настройки выбора элементов"
                                  FontSize="16"
                                  Style="{StaticResource GrayButton}"
                                  Height="30"
                                  DockPanel.Dock="Bottom"
                                  Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverterInverse}}"/>

                    <Border DockPanel.Dock="Bottom"
                            x:Name="SelectListContainer"
                            Visibility="{Binding IsChecked, ElementName=ShowSelectListTgl, Converter={StaticResource BoolToVis}}">

                        <ListView x:Name="SelectList"
                                ItemsSource="{Binding Item.Source.Select}"
                                Margin="0 0 0 10">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{StaticResource OrangeButton}"
                                                        Width="20"
                                                        Height="20"
                                                        ToolTip="Удалить"
                                                        Command="{Binding Source={StaticResource Proxy}, Path=Data.SelectDeleteCommand}"
                                                        CommandParameter="{Binding}">
                                                    <ContentControl Content="{StaticResource IconDelete}"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Тип"
                                            Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource SSTEnum}}"
                                                        SelectedItem="{Binding Type}"
                                                        VerticalAlignment="Stretch"
                                                        HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Выбирать"
                                            Width="600">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Value}"
                                                        TextWrapping="NoWrap">
                                                    <TextBox.InputBindings>
                                                        <KeyBinding Command="{Binding Source={StaticResource Proxy}, Path=Data.UpdateTextBoxCommand}"
                                                                Key="Enter"
                                                                CommandParameter="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
                                                    </TextBox.InputBindings>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Искать/Заменять"
                                            Width="160">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel HorizontalAlignment="Stretch"
                                                        Orientation="Vertical">
                                                    <TextBox Text="{Binding Filter}"
                                                            ToolTip="Regex Filter"
                                                            HorizontalAlignment="Stretch"/>
                                                    <TextBox AcceptsReturn="true"
                                                            MaxLines="2"
                                                            Text="{Binding Replace}"
                                                            HorizontalAlignment="Stretch"
                                                            ToolTip="Шаблон вывода из найденного: {0} или {имя группы}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="Stretch"/>
                                    <Setter Property="Padding"
                                            Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Border>
                    <Border DockPanel.Dock="Top"
                            x:Name="BrowserBorder"
                            BorderBrush="Silver"
                            BorderThickness="1"
                            Margin="0 10 0 10">
                        <!--<wpf:ChromiumWebBrowser  x:Name="web" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="300"></wpf:ChromiumWebBrowser>-->
                        <!--Address="{Binding Item.Source.Url}"-->
                    </Border>
                </DockPanel>
            </TabItem>
            <TabItem Header="Уведомления">
                <StackPanel Orientation="Vertical"
                        Margin="5 5 5 5">
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.RepeatNotify}"
                            ToolTip="При каждой проверке обновления страницы, будет выводиться уведомление, если наблюдатель не отмечем прочитанным.">Повторять уведомления при проверке до прочтения</CheckBox>
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.NotifyAfterError}"
                            ToolTip="Уведомление сработает, даже если не было изменений на странице.">Уведомлять после ошибки</CheckBox>
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.NotifyRepeatedError}"
                            ToolTip="Уведомление сработает, на повторяющуюся ошибку после устранения ошибки.">Уведомлять при повторяющейся ошибке</CheckBox>
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.Notify}">Показывать всплывающее уведомление</CheckBox>
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.SoundNotify}">Уведомление звуком</CheckBox>
                    <GroupBox>
                        <GroupBox.Header>
                            <CheckBox IsChecked="{Binding Item.NotifyTelegram}">Уведомление в Telegram</CheckBox>
                        </GroupBox.Header>
                        <Grid Margin="0 5 0 5">
                            <Grid.Resources>
                                <Style TargetType="Label">
                                    <Setter Property="Width"
                                            Value="130"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="1"
                                    Margin="2 2 2 2"
                                    ToolTip="Чат, в который будет отправлено уведомление.&#13;Если не указан, используется из настроек бота.">
                                <Label Content="ID чата"/>
                                <TextBox Text="{Binding Item.TelegramChat}"
                                        Padding="2 2 2 2"/>
                            </DockPanel>
                            <DockPanel Grid.Row="2"
                                    Margin="2 2 2 2"
                                    ToolTip="Шаблон сообщения телеграм.&#13;Если не указан, используется из настроек бота.">
                                <Label DockPanel.Dock="Left"
                                        Content="Шаблон сообщения"/>
                                <TextBox  DockPanel.Dock="Right"
                                        Text="{Binding Item.TelegramTemplate}"
                                        VerticalScrollBarVisibility="Auto"
                                        MaxLines="5"
                                        AcceptsReturn="true"
                                        Padding="2 2 2 2"
                                        ToolTip="{Binding Source={x:Static local:AppWindowModel.AvailableTelegramReplace}, StringFormat=Доступны замены {0} , Mode=OneWay}"/>
                            </DockPanel>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="Настройки">
                <StackPanel Orientation="Vertical"
                        Margin="5 5 5 5">
                    <CheckBox Margin="0 0 0 5"
                            IsChecked="{Binding Item.Source.SimulateMouse}"
                            ToolTip="После загрузкуи страницы будет выполнена эмуляция движения мыши и прокрутки колесом">Эмулировать движения мыши</CheckBox>
                    <StackPanel Margin="0 0 0 5"
                            Orientation="Vertical" ToolTip="Переход на страницу, будет происходить с этой страницы">
                        <Label>Переходить со страницы (Referer)</Label>
                        <TextBox Padding="2 2 2 2"
                                Text="{Binding Item.Source.Referer}"/>
                    </StackPanel>
                    <StackPanel Margin="0 0 0 5"
                            Orientation="Vertical"
                            ToolTip="Время ожидания полной загрузки страницы">
                        <Label>Ожидание загрузки страницы</Label>
                        <TextBox Padding="2 2 2 2"
                                Text="{Binding Item.Source.WaitTimeout, Converter={StaticResource TimeSpanConverter}, ConverterParameter=&apos;0s&apos;}"></TextBox>
                    </StackPanel>
                    <StackPanel Margin="0 0 0 5"
                            Orientation="Vertical"
                            ToolTip="Хранить последние изменения в количестве шт.">
                        <Label>Хранить последние данные</Label>
                        <TextBox Padding="2 2 2 2"
                                Text="{Binding Item.MaxCheckpoints}"
                                local:TextBoxUtils.CheckRegexText="^[0-9]{1,2}$"></TextBox>
                    </StackPanel>
                    <StackPanel Margin="0 0 0 5"
                            Orientation="Vertical"
                            ToolTip="При обновлении наблюдателя, ошибка вызывает повторную проверку через заданный интервал времени">
                        <Label>При ошибках проверять каждые</Label>
                        <TextBox Padding="2 2 2 2"
                                Text="{Binding Item.ErrorInterval, Converter={StaticResource TimeSpanConverter}, ConverterParameter=&apos;1m&apos;}"
                                 local:TextBoxUtils.CheckRegexText="^([0-9]+[смчдsmhd]?)*$"/>
                    </StackPanel>
                    <StackPanel Margin="0 0 0 5"
                            Orientation="Vertical">
                        <Label>Комментарий</Label>
                        <TextBox Padding="2 2 2 2"
                                ToolTip="Выводится во всплывающей подсказке списка наблюдателей и истории изменений"
                                MaxLines="3"
                                TextWrapping="NoWrap"
                                VerticalScrollBarVisibility="Auto"
                                AcceptsReturn="true"
                                Text="{Binding Item.Comment}"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>